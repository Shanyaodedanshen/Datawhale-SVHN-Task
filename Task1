Firstly, in my onpinion, it's better to use the recognition model, i.e., SSD, YOLO, etc. The following depiction is listed as 
some tricks for competition and something interesting.

(0)Recommended Paper:
'Object Detection in 20 Years: A Survey'.

(1)From the level of Regression Loss:
Comparation among using SmoothL1/IoU/GIoU/DIoU/CIoU Loss.

(2)Multiscale methods for little object detection:
(2.1)original FPN (Conventional: e.g., Haar+Adaboost; 'Hog+SVM' in DPM);
(2.2)SNIP/SNIPER (SNIPER+Faster RCNN-ResNet101 increase efficiency ,and is 4% better than YOLOv4);
(2.3)like the method using feature map with different stride in SSD;
(2.4)stitcher;
(2.5)empty convolution (TridentNetï¼šReceptive field~ object size, convolution kernel with larger void rate detects larger target);
(2.6)FPN improvement (PANet; ThunderNet (SNet+ Context Enhancement Module (CEM, compressed RPN)+ Spatial Attention Module); 
                  Libra R-CNN(IoU-balanced Sampling+Balanced Feature Pyramid+Balanced L1 Loss));

(3)some cutting-edge technology:
YOLOv4.

(4)state-of-the-art model:
Cascade R-CNN.

(5)data processing:
mixup;
one-hot;
scale optimization.

(6)lightweight:
MobileNet;
shuffleNet;
GhostNet;
model pruning & compression.

(7) Other: multi-stage, Scale Normalization for training-RPN, deeper backbone, DCN, Softer-NMS, RoI Align, using cluster to get size 
of anchors.

To be continued...
